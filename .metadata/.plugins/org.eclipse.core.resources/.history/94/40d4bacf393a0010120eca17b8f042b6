package br.com.crud.bean;


import java.io.Serializable;
import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.view.ViewScoped;
import javax.inject.Named;

import br.com.crud.dao.PersonDAO;
import br.com.crud.domain.Document;
import br.com.crud.domain.Person;

@Named
@ViewScoped
public class PersonBean implements Serializable {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Person person;
    private List<Person> people;
    private String searchName;
    private String docTipo;
    private String docNumero;
    private PersonDAO dao = new PersonDAO();

    public void init() {
        person = new Person();
        people = dao.findAll();
    }

    public void save() {
        try {
            dao.save(person);
            FacesContext.getCurrentInstance().addMessage(null,
                new FacesMessage(FacesMessage.SEVERITY_INFO, "Sucesso", "Pessoa salva com sucesso."));
            people = dao.findAll();
            person = new Person(); // limpa o formulário
        } catch (Exception e) {
            FacesContext.getCurrentInstance().addMessage(null,
                new FacesMessage(FacesMessage.SEVERITY_ERROR, "Erro", "Falha ao salvar: " + e.getMessage()));
        }
    }

    public void delete(Person p) {
        dao.delete(p);
        people = dao.findAll();
    }

    public void edit(Person p) {
        this.person = p;
    }

    public void search() {
        if (searchName != null && !searchName.trim().isEmpty()) {
            people = dao.findByName(searchName);
        } else {
            people = dao.findAll();
        }
    }
    public void addDocumento() {
        Document doc = new Document();
        doc.setTipo(docTipo);
        doc.setNumero(docNumero);
        doc.setPerson(person);
        person.getDocuments().add(doc);

        // limpa campos do formulário
        docTipo = "";
        docNumero = "";
    }
    public void removeDocumento(Document doc) {
        person.getDocuments().remove(doc);
    }
    // Getters e Setters

    public Person getPerson() {
        return person;
    }

    public void setPerson(Person person) {
        this.person = person;
    }

    public List<Person> getPeople() {
        return people;
    }

    public String getSearchName() {
        return searchName;
    }

    public void setSearchName(String searchName) {
        this.searchName = searchName;
    }
 // Getters e Setters para docTipo e docNumero
    public String getDocTipo() {
        return docTipo;
    }

    public void setDocTipo(String docTipo) {
        this.docTipo = docTipo;
    }

    public String getDocNumero() {
        return docNumero;
    }

    public void setDocNumero(String docNumero) {
        this.docNumero = docNumero;
    }
}
